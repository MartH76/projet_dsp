@@Assembly
r12=m5;
btst r1 by r12;
if sz jump (pc, 0x29);
r2=dm(0x2,i6);
f8=float r2;
call (pc, ___lib_fdiv);
dm(0xfffffffe,i6)=r0;
dm(j)=m6;
r2=dm(j);
r1=0xa;
comp(r2,r1);
if gt jump (pc, 0x1f);
r1=dm(m6,i6);
r0=m6;
r2=lshift r0 by r2;
r2=r1 and r2;
r2=pass r2;
if eq jump (pc, 0x9);
r4=dm(0xfffffffb,i6);
r8=dm(0xfffffffd,i6);
r12=dm(0xfffffffe,i6);
cjump _gene_sinus_LUT_asm_v2(db);
dm(i7,m7)=r2;
dm(i7,m7)=pc;
dm(addr_buff)=r0;
jump (pc, 0x8);
r4=dm(0xfffffffc,i6);
r8=dm(0xfffffffd,i6);
r12=dm(0xfffffffe,i6);
cjump _gene_sinus_LUT_asm_v2(db);
dm(i7,m7)=r2;
dm(i7,m7)=pc;
dm(addr_buff)=r0;
r2=dm(0xfffffffe,i6);
r8=trunc f2;
r12=dm(N_sample_buff);
r2=r8+r12;
dm(N_sample_buff)=r2;
r2=dm(j);
r2=r2+1;
dm(j)=r2;
jump (pc, 0xffffffdf);
jump (pc, 0x1);
r0=m6;
